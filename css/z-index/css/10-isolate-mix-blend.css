html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  display: grid;
  place-content: center;
  min-height: 100vh;
  margin: 1em;

  font-size: calc(0.625rem + 1vmin);
}

div:not(.container) {
  width: 10em;
  height: 10em;
  padding: 0.2em;

  background-color: #666;
  color: white;
  text-align: center;
  line-height: 10em;
}
div.child {
  width: 6em;
  height: 2em;
  line-height: 2em;
}

.container {
  width: 20em;
  height: 20em;
  background-color: hsl(60, 100%, 50%, 0.5);
}

#second {
  margin: auto;
  margin-top: 5em;
  background-color: hsla(195, 75%, 46%, 0.7);

  /* create a separate stacking-context for this
     element and it's children

     If toggled off, the colours of both children
     will blend with whatever is behind them
   */
  isolation: isolate;
}

#second .child {
  /* both child elements have the same
     background colour */
  background-color: hsla(345, 75%, 46%, 0.7);

  /* mix the elements colour with that
     of the elements behind it

     will only apply to elements within the
     same stacking context
  */
  mix-blend-mode: overlay;
}

#second .child:first-child {
  /* position with the parent #second element */
  margin-top: -4em;
  left: 2em;

  /* background colour WILL BLEND with the blue of 
     #second, the element's parent, as they are
     within the same stacking context
  */
}

#second .child:last-child {
  /* position outside the parent #second element */
  margin-top: 4em;
  bottom: -4em;
  left: 2em;

  /* background colour WILL NOT BLEND with the element
     behind it as the .container element is not in 
     the same stacking context as this child element
     of #second
  */
}
