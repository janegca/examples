/* -- Custom Properties -- */
:root {
  --auto-grid-min-size: 21vmin;
}

/* -- Resets -- */
html {
  box-sizing: border-box;
  font-size: calc(1rem + 0.5vmin);
  scroll-behavior: smooth;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

/* -- Utility classes -- */
.wrapper {
  max-width: 90%;
  margin-left: auto;
  margin-right: auto;
  padding: 0 5vmin;
}

.auto-grid {
  display: grid;
  grid-template-columns: repeat(
    auto-fill,
    minmax(var(--auto-grid-min-size, 10vmin), 1fr)
  );
  grid-gap: 1rem;

  justify-items: center;
  margin: 2rem 0;
}

/* -- General Styling -- */
h1,
h2 {
  font-size: 4vmin;
  text-align: center;
  margin: 0;
  padding: 0;
}

h2 {
  font-size: 3vmin;
  text-align: left;
  margin-bottom: 1rem;
}

p {
  font-size: 2vmin;
  text-align: center;
  margin: 0 0 2vmin;
}

/* -- Basic Shapes -- */

/* circle */
.circle {
  width: 10vmin;
  height: 10vmin;
  border-radius: 50%;
  background-color: tomato;
}

.circle-ht {
  width: 10vmin;
  height: 5vmin;
  border-radius: 10vmin 10vmin 0 0;
  background-color: plum;
}

.circle-hb {
  width: 10vmin;
  height: 5vmin;
  border-radius: 0 0 10vmin 10vmin;
  background-color: plum;
}

.circle-hl {
  width: 5vmin;
  height: 10vmin;
  border-radius: 10vmin 0 0 10vmin;
  background-color: plum;
}

.circle-hr {
  width: 5vmin;
  height: 10vmin;
  border-radius: 0 10vmin 10vmin 0;
  background-color: plum;
}

/* hexagon */
.hexagon {
  position: relative;
  top: 2.9vmin;
  width: 10vmin;
  height: 5.7735vmin;

  background: hsl(120, 100%, 34%);
}

.hexagon::before {
  content: "";
  position: absolute;
  top: -2.9vmin;
  left: 0;
  width: 0;
  height: 0;

  border-left: 5vmin solid transparent;
  border-right: 5vmin solid transparent;
  border-bottom: 2.9vmin solid hsl(120, 100%, 34%);
}

.hexagon::after {
  content: "";
  position: absolute;
  bottom: -2.9vmin;

  border-left: 5vmin solid transparent;
  border-right: 5vmin solid transparent;
  border-top: 2.9vmin solid hsl(120, 100%, 34%);
}

/* octagon
    for some reason this only works ok in
    Codepen if the widths on before/after
    are set to 4.2vmin
 */
.octagon {
  position: relative;
  width: 10vmin;
  height: 10vmin;

  background-color: hsl(120, 100%, 34%);
}

.octagon::before {
  content: "";
  position: absolute;
  width: 10vmin;

  border-bottom: 2.9vmin solid hsl(120, 100%, 34%);
  border-left: 2.9vmin solid var(--clr-bg, white);
  border-right: 2.9vmin solid var(--clr-bg, white);
}

.octagon::after {
  content: "";
  position: absolute;
  bottom: 0;
  width: 10vmin;

  border-top: 2.9vmin solid hsl(120, 100%, 34%);
  border-left: 2.9vmin solid var(--clr-bg, white);
  border-right: 2.9vmin solid var(--clr-bg, white);
}

/* oval */
.oval {
  width: 20vmin;
  height: 10vmin;
  border-radius: 10vmin / 5vmin;
  background-color: tomato;
}

/* parallelogram */
.parallelogram {
  width: 15vmin;
  height: 10vmin;
  background-color: hsl(120, 100%, 34%);
  transform: skew(20deg);
}

/* pentagon */
.pentagon {
  position: relative;
  top: 40%;
  width: 10vmin;

  border-top: 6vmin solid hsl(120, 100%, 34%);
  border-left: 1.8vmin solid transparent;
  border-right: 1.8vmin solid transparent;
}

.pentagon:before {
  content: "";
  position: absolute;
  top: -10.49vmin;
  left: -1.7vmin;

  border-width: 0 5vmin 4.5vmin;
  border-style: solid;
  border-color: transparent transparent hsl(120, 100%, 34%);
}

/* rectangle */
.rectangle {
  width: 20vmin;
  height: 10vmin;
  background-color: tomato;
}

/* square */
.square {
  width: 10vmin;
  height: 10vmin;
  background-color: tomato;
}

/* trapezoid */
.trapezoid {
  width: 10vmin;
  height: 0;
  border-left: 2.5vmin solid transparent;
  border-right: 2.5vmin solid transparent;
  border-bottom: 10vmin solid hsl(120, 100%, 34%);
}

/* triangles */
.triangle-up {
  border-left: 5vmin solid transparent;
  border-right: 5vmin solid transparent;
  border-bottom: 10vmin solid hsl(210, 100%, 64%);
}

.triangle-down {
  border-left: 5vmin solid transparent;
  border-right: 5vmin solid transparent;
  border-top: 10vmin solid hsl(210, 100%, 64%);
}

.triangle-left {
  border-top: 5vmin solid transparent;
  border-right: 10vmin solid hsl(210, 100%, 64%);
  border-bottom: 5vmin solid transparent;
}

.triangle-right {
  border-top: 5vmin solid transparent;
  border-left: 10vmin solid hsl(210, 100%, 64%);
  border-bottom: 5vmin solid transparent;
}

.triangle-tl {
  border-top: 10vmin solid hsl(210, 100%, 64%);
  border-right: 10vmin solid transparent;
}

.triangle-tr {
  border-top: 10vmin solid hsl(210, 100%, 64%);
  border-left: 10vmin solid transparent;
}

.triangle-bl {
  border-bottom: 10vmin solid hsl(210, 100%, 64%);
  border-right: 10vmin solid transparent;
}

.triangle-br {
  border-bottom: 10vmin solid hsl(210, 100%, 64%);
  border-left: 10vmin solid transparent;
}

/* -- Common Styled Shapes -- */

/* arrow(s) */
.arrow-curved {
  position: relative;
  width: 0;
  height: 0;

  /* the arrow */
  border-top: 3vmin solid transparent;
  border-right: 3vmin solid tomato;

  transform: rotate(10deg);
}

.arrow-curved::after {
  content: "";
  position: absolute;
  top: -4vmin;
  left: -3vmin;
  width: 4vmin;
  height: 3.5vmin;

  /* the curved tail */
  border: 0 solid transparent;
  border-top: 1vmin solid tomato;
  border-radius: 7vmin 0 0 0;

  transform: rotate(45deg);
}

/* badges */
.badge-ribbon {
  position: relative;
  width: 10vmin;
  height: 10vmin;

  border-radius: 50%;
  background-color: hsl(210, 100%, 64%);
}

.badge-ribbon::before,
.badge-ribbon::after {
  content: "";
  position: absolute;
  top: 7vmin;
  left: -1vmin;

  border-bottom: 7vmin solid hsl(210, 100%, 64%);
  border-left: 4vmin solid transparent;
  border-right: 4vmin solid transparent;

  transform: rotate(-140deg);
}

.badge-ribbon::after {
  left: auto;
  right: -1vmin;

  transform: rotate(140deg);
}

/* base */
.base {
  position: relative;
  width: 10vmin;
  height: 5.5vmin;
  margin: auto;

  background: tomato;
}

.base::before {
  content: "";
  position: absolute;
  top: -3.5vmin;

  border-bottom: 3.5vmin solid tomato;
  border-left: 5vmin solid transparent;
  border-right: 5vmin solid transparent;
}

/* bursts */
.burst-8pts {
  position: relative;
  width: 10vmin;
  height: 10vmin;

  background-color: hsl(120, 100%, 34%);
  transform: rotate(20deg);
}

.burst-8pts::before {
  content: "";
  position: absolute;
  height: 10vmin;
  width: 10vmin;

  background-color: hsl(120, 100%, 34%);
  transform: rotate(135deg);
}

.burst-12pts {
  position: relative;
  width: 10vmin;
  height: 10vmin;

  background: hsl(120, 100%, 34%);
}

.burst-12pts::before,
.burst-12pts::after {
  content: "";
  position: absolute;

  height: 10vmin;
  width: 10vmin;
  background: hsl(120, 100%, 34%);
}

.burst-12pts::before {
  transform: rotate(30deg);
}

.burst-12pts::after {
  transform: rotate(60deg);
}

/* chevron */
.chevron {
  position: relative;
  height: 6vmin;
  width: 20vmin;

  margin: auto;
}

.chevron::before,
.chevron::after {
  content: "";
  position: absolute;

  width: 50%;
  height: 100%;

  background: tomato;
  transform: skew(0deg, 6deg);
}

.chevron:after {
  right: 0;
  transform: skew(0deg, -6deg);
}

/* cone */
.cone {
  margin: auto;

  border-radius: 50%;
  border-left: 7vmin solid transparent;
  border-right: 7vmin solid transparent;
  border-top: 10vmin solid tomato;
}

/* corner cutouts */
[class^="corner-"] {
  position: relative;
  width: 10vmin;
  height: 10vmin;

  overflow: hidden;
}

[class^="corner-"]::before {
  content: "";
  position: absolute;
  display: block;
  width: 200%;
  height: 200%;

  border-radius: 50%;
}

.corner-tl::before {
  top: 0;
  left: 0;
  box-shadow: -50px -50px 0 0 var(--clr-corners, black);
}

.corner-tr::before {
  top: 0;
  right: 0;
  box-shadow: 50px -50px 0 0 var(--clr-corners, black);
}

.corner-bl::before {
  bottom: 0;
  left: 0;
  box-shadow: -50px 50px 0 0 var(--clr-corners, black);
}

.corner-br::before {
  bottom: 0;
  right: 0;
  box-shadow: 50px 50px 0 0 var(--clr-corners, black);
}

/* cross */
.cross,
.cross::after {
  position: relative;
  width: 2vmin;
  height: 10vmin;
  margin: auto;

  background-color: tomato;
}
.cross::after {
  content: "";
  position: absolute;

  transform: rotate(90deg);
}

/* diamonds */
.diamond {
  position: relative;
  top: -5vmin;
  height: 0;

  border: 5vmin solid transparent;
  border-bottom-color: hsl(210, 100%, 64%);
}

.diamond::after {
  content: "";
  position: absolute;
  left: -5vmin;
  top: 5vmin;

  border: 5vmin solid transparent;
  border-top-color: hsl(210, 100%, 64%);
}

.diamond-shield {
  position: relative;
  top: -5vmin;
  height: 0;

  border: 5vmin solid transparent;
  border-bottom: 2vmin solid hsl(210, 100%, 64%);
}

.diamond-shield::after {
  content: "";
  position: absolute;
  left: -5vmin;
  top: 2vmin;

  border: 5vmin solid transparent;
  border-top: 7vmin solid hsl(210, 100%, 64%);
}

.diamond-narrow {
  position: relative;
  top: -5vmin;
  height: 0;

  border: 5vmin solid transparent;
  border-bottom: 7vmin solid hsl(210, 100%, 64%);
}

.diamond-narrow::after {
  content: "";
  position: absolute;
  left: -5vmin;
  top: 7vmin;

  border: 5vmin solid transparent;
  border-top: 7vmin solid hsl(210, 100%, 64%);
}

.diamond-cut {
  position: relative;
  width: 5vmin;
  height: 0;

  margin: 2vmin 0 5vmin;

  border-style: solid;
  border-color: transparent transparent hsl(210, 100%, 64%) transparent;
  border-width: 0 2.5vmin 2.5vmin 2.5vmin;

  box-sizing: content-box;
}

.diamond-cut::after {
  content: "";
  position: absolute;
  top: 2.5vmin;
  left: -2.5vmin;

  border-style: solid;
  border-color: hsl(210, 100%, 64%) transparent transparent transparent;
  border-width: 7vmin 5vmin 0 5vmin;
}

/* egg */
.egg {
  display: block;
  width: 7vmin;
  height: 10vmin;

  background-color: red;
  border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
}

/* flag(s) */
.flag {
  position: relative;
  width: 11vmin;
  height: 5.5vmin;
  margin: auto;

  background: tomato;
}

.flag::after {
  content: "";
  position: absolute;
  bottom: 0;

  border-bottom: 1.3vmin solid var(--clr-bg, white);
  border-left: 5.5vmin solid transparent;
  border-right: 5.5vmin solid transparent;
}

/* heart */
.heart {
  position: relative;
  width: 10vmin;
  height: 9vmin;
}

.heart::before,
.heart::after {
  content: "";
  position: absolute;
  left: 5vmin;
  top: 0;
  width: 5vmin;
  height: 8vmin;

  background: tomato;
  border-radius: 5vmin 5vmin 0 0;

  transform: rotate(-45deg);
  transform-origin: 0 100%;
}

.heart::after {
  left: 0;

  transform: rotate(45deg);
  transform-origin: 100% 100%;
}

/* icons */
.icon-fb {
  position: relative;
  width: 12vmin;
  height: 12vmin;

  border-radius: 0.5vmin;
  border: 1.5vmin solid var(--clr-fb, hsl(214, 89%, 52%));
  border-bottom: 0;

  background: var(--clr-fb, hsl(214, 89%, 52%));
  overflow: hidden;
}

.icon-fb::before {
  content: "";
  position: absolute;
  width: 4vmin;
  height: 9vmin;
  bottom: -3vmin;
  right: -3.7vmin;

  border: 2vmin solid var(--clr-bg, white);
  border-radius: 2.5vmin;

  background: var(--clr-fb, hsl(214, 89%, 52%));
  box-sizing: content-box;
}

.icon-fb::after {
  content: "";
  position: absolute;
  top: 5vmin;
  right: 0.5vmin;
  width: 5.5vmin;
  height: 2vmin;

  background: #eee;
  box-sizing: content-box;
}

/* rss feed 
    left this with font-size in pixels and
    measurements in em as you would usually
    want this to scale with text, not the
    viewport
 */
.icon-rss {
  width: 20em;
  height: 20em;

  border-radius: 3em;
  background-color: #ff0000;

  font-size: var(--fs-04, 4px);
}

.icon-rss::before {
  content: "";
  position: relative;
  top: 11.5em;
  left: 3.5em;
  display: block;
  height: 5em;
  width: 5em;

  background: #fff;
  border-radius: 50%;

  z-index: 1;
}

.icon-rss::after {
  content: "";
  position: relative;
  display: block;
  width: 13em;
  height: 13em;
  top: -2em;
  left: 3.8em;

  border-radius: 2.5em;
  background: #ff0000;
  box-shadow: -2em 2em 0 0 #fff inset, -4em 4em 0 0 #ff0000 inset,
    -6em 6em 0 0 #fff inset;
}

/* infinity symbol */
.infinity {
  position: relative;
  width: 21.2vmin;
  height: 10vmin;
}

.infinity::before,
.infinity::after {
  content: "";
  position: absolute;
  width: 6vmin;
  height: 6vmin;

  box-sizing: content-box;

  border: 2vmin solid tomato;
  border-radius: 5vmin 5vmin 0 5vmin;
  transform: rotate(-45deg);
}

.infinity::after {
  left: auto;
  right: 0;

  border-radius: 5vmin 5vmin 5vmin 0;
  transform: rotate(45deg);
}

/* lock 
    this one doesn't work properly
    in Codepen either
 */
.lock {
  position: relative;
  width: 18vmin;
  height: 13vmin;

  border: 3.5vmin solid tomato;
  border-radius: 2vmin;
  border-right-width: 7.5vmin;
  border-left-width: 7.5vmin;

  transform: scale(50%);
}

.lock::before {
  /* lock handle */
  content: "";
  position: absolute;
  left: 50%;
  top: -12vmin;
  width: 14vmin;
  height: 12vmin;

  margin-left: -7vmin;

  border: 2.5vmin solid tomato;
  border-top-left-radius: 7vmin;
  border-top-right-radius: 7vmin;
}

.lock::after {
  /* lock hole */
  content: "";
  position: absolute;
  left: 50%;
  top: -1vmin;
  width: 5vmin;
  height: 8vmin;
  margin-left: -2.5vmin;

  border-radius: 2.5vmin;
  border: 1vmin solid tomato;
}

/* moon */
.moon {
  width: 10vmin;
  height: 10vmin;

  border-radius: 50%;
  box-shadow: 2vmin 2vmin 0 0 hsl(210, 100%, 64%);
}

/* pac-man */
.pac-man {
  height: 0;

  border-right: 6vmin solid transparent;
  border-top: 6vmin solid plum;
  border-left: 6vmin solid plum;
  border-bottom: 6vmin solid plum;
  border-top-left-radius: 6vmin;
  border-top-right-radius: 6vmin;
  border-bottom-left-radius: 6vmin;
  border-bottom-right-radius: 6vmin;
}

/* pointer */
.pointer {
  position: relative;
  width: 20vmin;
  height: 4vmin;
  margin: auto;

  background-color: tomato;
}

.pointer::before,
.pointer::after {
  content: "";
  position: absolute;

  border-left: 2vmin solid var(--clr-bg, white);
  border-top: 2vmin solid transparent;
  border-bottom: 2vmin solid transparent;
}

.pointer::after {
  right: -2vmin;
  border-left: 2vmin solid tomato;
}

/* spy glass */
.spy-glass {
  position: relative;
  width: 8vmin;
  height: 8vmin;

  border-radius: 50%;
  border: 1vmin solid tomato;
}

.spy-glass::before {
  content: "";
  position: absolute;
  right: -3vmin;
  bottom: -1vmin;
  width: 4vmin;
  height: 1vmin;

  background: tomato;

  transform: rotate(40deg);
}

/* space invader */
.space-invader {
  width: 1vmin;
  height: 1vmin;
  margin: auto;

  box-shadow: 0 0 0 1vmin tomato, 0 1vmin 0 1vmin tomato,
    -2.5vmin 1.5vmin 0 0.5vmin tomato, 2.5vmin 1.5vmin 0 0.5vmin tomato,
    -3vmin -3vmin 0 0 tomato, 3vmin -3vmin 0 0 tomato, -2vmin -2vmin 0 0 tomato,
    2vmin -2vmin 0 0 tomato, -3vmin -1vmin 0 0 tomato, -2vmin -1vmin 0 0 tomato,
    2vmin -1vmin 0 0 tomato, 3vmin -1vmin 0 0 tomato, -4vmin 0 0 0 tomato,
    -3vmin 0 0 0 tomato, 3vmin 0 0 0 tomato, 4vmin 0 0 0 tomato,
    -5vmin 1vmin 0 0 tomato, -4vmin 1vmin 0 0 tomato, 4vmin 1vmin 0 0 tomato,
    5vmin 1vmin 0 0 tomato, -5vmin 2vmin 0 0 tomato, 5vmin 2vmin 0 0 tomato,
    -5vmin 3vmin 0 0 tomato, -3vmin 3vmin 0 0 tomato, 3vmin 3vmin 0 0 tomato,
    5vmin 3vmin 0 0 tomato, -2vmin 4vmin 0 0 tomato, -1vmin 4vmin 0 0 tomato,
    1vmin 4vmin 0 0 tomato, 2vmin 4vmin 0 0 tomato;
  background-color: tomato;
}

/* stars */
.star-5pts {
  position: relative;
  width: 0;
  height: 0;
  margin: 5vmin 0;

  display: block;

  border-right: 10vmin solid transparent;
  border-bottom: 7vmin solid tomato;
  border-left: 10vmin solid transparent;

  transform: rotate(35deg);
}

.star-5pts::before {
  content: "";
  position: absolute;
  height: 0;
  width: 0;
  top: -4.5vmin;
  left: -6.5vmin;

  display: block;

  border-bottom: 8vmin solid tomato;
  border-left: 3vmin solid transparent;
  border-right: 3vmin solid transparent;

  transform: rotate(-35deg);
}

.star-5pts::after {
  content: "";
  position: absolute;
  top: 0.7vmin;
  left: -11vmin;
  width: 0;
  height: 0;

  display: block;

  border-right: 10vmin solid transparent;
  border-bottom: 7vmin solid tomato;
  border-left: 10vmin solid transparent;

  transform: rotate(-70deg);
}

.star-6pts {
  width: 0;
  height: 0;
  border-left: 5vmin solid transparent;
  border-right: 5vmin solid transparent;
  border-bottom: 10vmin solid tomato;
  position: relative;
}

.star-6pts::after {
  content: "";
  position: absolute;
  top: 3vmin;
  left: -5vmin;
  width: 0;
  height: 0;
  border-left: 5vmin solid transparent;
  border-right: 5vmin solid transparent;
  border-top: 10vmin solid tomato;
}

/* talk bubble */
.talk-bubble {
  position: relative;
  width: 12vmin;
  height: 8vmin;

  background: plum;
  border-radius: 1vmin;
}

.talk-bubble::before {
  content: "";
  position: absolute;
  right: 100%;
  top: 2.6vmin;

  border-top: 1.3vmin solid transparent;
  border-right: 2.6vmin solid plum;
  border-bottom: 1.3vmin solid transparent;
}

/* tv screen */
.tv-screen {
  position: relative;
  width: 20vmin;
  height: 15vmin;

  background: tomato;
  border-radius: 50% / 10%;
}

.tv-screen::before {
  content: "";
  position: absolute;
  top: 10%;
  bottom: 10%;
  right: -5%;
  left: -5%;

  background: inherit;
  border-radius: 5% / 50%;
}

/* yin-yang */
.yin-yang,
.yin-yang::before,
.yin-yang::after {
  box-sizing: content-box;
  width: 1.2vmin;
  height: 1.2vmin;

  border-color: var(--clr-fg, currentColor);
  border-style: solid;
  border-width: 1.8vmin;
  border-radius: 100%;

  background-color: var(--clr-bg, white);
}

.yin-yang {
  position: relative;
  width: 9.6vmin;
  height: 4.8vmin;

  border-width: 0.2vmin 0.2vmin 5vmin 0.2vmin;
}

.yin-yang::before,
.yin-yang::after {
  content: "";
  position: absolute;
  top: 50%;
}

.yin-yang::after {
  left: 50%;

  border-color: var(--clr-bg, white);
  background-color: var(--clr-fg, currentColor);
}
